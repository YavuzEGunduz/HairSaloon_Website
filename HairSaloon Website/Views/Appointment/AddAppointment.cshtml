@model HairSaloon_Website.Models.Appointment
@{
    ViewData["Title"] = "New Appointment";
    var processes = ViewBag.Processes as List<HairSaloon_Website.Models.Process>;
    var employees = ViewBag.Employees as List<HairSaloon_Website.Models.Employee>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Appointment</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #2c3e50;
            color: #ecf0f1;
            font-family: Arial, sans-serif;
        }

        .container {
            margin-top: 50px;
            background-color: #34495e;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
        }

        h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #ecf0f1;
            font-size: 2.5em;
            font-weight: bold;
            text-shadow: 2px 2px 0 #e74c3c, 4px 4px 0 #3498db, 6px 6px 0 #f1c40f;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            color: #ecf0f1;
            text-shadow: 2px 2px 0 #f39c12;
            font-weight: bold;
            letter-spacing: 1px;
            margin-bottom: 5px;
        }

        .btn-primary {
            background-color: #e74c3c;
            border-color: #e74c3c;
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            color: #ecf0f1;
            text-shadow: 2px 2px 0 #e74c3c;
            margin-top: 20px;
        }

            .btn-primary:hover {
                background-color: #c0392b;
                border-color: #c0392b;
            }
    </style>
</head>
<body>
    <div class="container">
        <h2>New Appointment</h2>
        <form asp-action="AddAppointment" method="post">
            <div class="form-group">
                <label asp-for="ProcessId">Choose Process</label>
                <select asp-for="ProcessId" class="form-control" id="process-select">
                    <option value="">Process</option>
                    @foreach (var process in processes)
                    {
                        <option value="@process.Id">@process.pName</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Date">Appointment Date</label>
                <input asp-for="Date" class="form-control" type="datetime-local" id="appointmentDate" disabled />
            </div>

            <div class="form-group">
                <label asp-for="EmployeeId">Choose Employee</label>
                <select asp-for="EmployeeId" class="form-control" id="employee-select" disabled>
                    <option value="">Employee</option>
                </select>
            </div>

            <button type="submit" class="btn btn-primary" id="submitButton" disabled>Add</button>
        </form>
    </div>

    <script>
        document.getElementById('process-select').addEventListener('change', function () {
            var processId = this.value;
            var appointmentDateElem = document.getElementById('appointmentDate');
            var employeeSelect = document.getElementById('employee-select');
            var submitButton = document.getElementById('submitButton');

            if (processId) {
                appointmentDateElem.disabled = false;
                employeeSelect.disabled = true;
                submitButton.disabled = true;
            } else {
                appointmentDateElem.disabled = true;
                submitButton.disabled = true;
            }
        });

        document.getElementById('appointmentDate').addEventListener('change', function () {
            var appointmentDate = new Date(this.value);
            var processId = document.getElementById('process-select').value;
            var employeeSelect = document.getElementById('employee-select');
            var submitButton = document.getElementById('submitButton');

            if (appointmentDate && processId) {
                fetch(`/Appointment/GetAvailableEmployees?appointmentDate=${appointmentDate.toISOString()}&processId=${processId}`)
                    .then(response => {
                        if (!response.ok) throw new Error("Network response was not ok");
                        return response.json();
                    })
                    .then(data => {
                        employeeSelect.innerHTML = '<option value="">Employee</option>';

                        if (data.length > 0) {
                            data.forEach(employee => {
                                var option = document.createElement('option');
                                option.value = employee.id;
                                option.text = employee.name;
                                employeeSelect.appendChild(option);
                            });
                            employeeSelect.disabled = false;  // Çalışanlar aktif hale gelir
                            submitButton.disabled = false;
                        } else {
                            var option = document.createElement('option');
                            option.disabled = true;
                            option.text = "No Available Employee";
                            employeeSelect.appendChild(option);
                            submitButton.disabled = true;  // Formu devre dışı bırak
                        }
                    })
                    .catch(error => console.error("Error fetching available employees:", error));
            }
        });

        document.getElementById('appointmentDate').setAttribute('min', new Date().toISOString().slice(0, 16));
    </script>
</body>
</html>
